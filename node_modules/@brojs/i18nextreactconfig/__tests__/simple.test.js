const { describe, it, expect } = require("@jest/globals");
const i18next = require("i18next");
const { i18nextInitConfig, i18nextAxios } = require("../index");
import "whatwg-fetch";
const AxiosMockAdapter = require("axios-mock-adapter");

const mock = new AxiosMockAdapter(i18nextAxios);

mock.onGet("locales/ru.json").reply(200, {
    'key1': 'value1',
    'key2': 'value2 {{val}}',
});
mock.onGet("locales/en.json").reply(200, {
    'key1': 'en value1',
    'key2': 'en value2 {{val}}',
});

i18next.t = i18next.t.bind(i18next);

global.__webpack_public_path__ = "";

describe("i18nextInitConfig", () => {
  it("should return a valid i18next config", async () => {
    const config = await i18nextInitConfig(i18next);

    expect(config).toBeTruthy();

    expect(i18next.t('key1')).toBe('value1');

    await i18next.changeLanguage('en')

    expect(i18next.t('key1')).toBe('en value1');
    expect(i18next.t('key2', { val: '1' })).toBe('en value2 1');
  });
});

import path from "node:path";
import { merge } from "webpack-merge";
import webpack from "webpack";

import getBaseConfig from "./base.js";

const outputDirectory = "dist";

const getConfig = async () => merge(
  {
    mode: "development",
    entry: {
      index: [
        "webpack-hot-middleware/client",
        // 'react-hot-loader/patch',
        /**
         * Отключено так как не совместимо с 6 версией react-router-dom
         *
         * rrd проверяет тип детей роутеров,
         * ожидает соответствие своему типу.
         * а rhl оборачивает все компоненты в свой ProxyFacade
         * из-за этого тип не соответствует и все падает
         */
        path.resolve(process.env.ENTRY),
      ],
    },
    output: {
      filename: "[name].js",
      path: path.resolve(process.cwd(), outputDirectory),
      libraryTarget: "umd",
      globalObject: `(typeof self !== 'undefined' ? self : this)`,
    },
    plugins: [
      new webpack.HotModuleReplacementPlugin(),
      new webpack.DefinePlugin({
        "typeof window": JSON.stringify("object"),
      }),
    ],
    devtool: "source-map",
  },
  await getBaseConfig(),
);

export default getConfig;
